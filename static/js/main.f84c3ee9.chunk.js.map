{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Hjweet.js","components/HjweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Hjweet","hjweetObj","isOwner","editing","setEditing","text","newWeet","setNewWeet","onDeleteClick","ok","window","confirm","doc","id","delete","toggleEditing","update","autoFocus","attachmentUrl","src","class","faTrash","faPencilAlt","HjweetFactory","userObj","hjweet","setHjweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","uid","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","hjWeets","setHjweets","useEffect","onSnapshot","snapshot","hjWeetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f84c3ee9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport  \"firebase/firestore\";\r\nimport  \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey:  process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUR_ID,\r\n    databaseURL : process.env.REACT_APP_DATABASE_URL\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n\r\n","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n  \r\n    const onChange = (event) => {\r\n        const {\r\n          target: {name, value},\r\n        } = event;\r\n        if (name === \"email\"){\r\n          setEmail(value);\r\n        } else if (name === \"password\")\r\n          setPassword(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n          let data;\r\n          if (newAccount) {\r\n            data = await authService.createUserWithEmailAndPassword(email,password);\r\n          } else {\r\n            data = await authService.signInWithEmailAndPassword(email,password);\r\n          }\r\n          console.log(data);\r\n        } catch(error){\r\n          setError(error.message);\r\n        }\r\n      };\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n    return(\r\n    <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n            name=\"email\" \r\n            type=\"email\" \r\n            placeholder=\"Email\"\r\n            required \r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n        />\r\n        <input \r\n            name=\"password\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            required \r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n        />\r\n        <input \r\n            type=\"submit\" \r\n            value={newAccount ? \"Create Account\" : \"Log In\"}\r\n            className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\"){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Hjweet = ({hjweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newWeet, setNewWeet] = useState(hjweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n      const ok = window.confirm(\"Are you sure you want to delete this hjweet?\");\r\n      console.log(ok);\r\n      if(ok){\r\n        await dbService.doc(`hjWeets/${hjweetObj.id}`).delete();\r\n      }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      console.log(hjweetObj, newWeet);\r\n      await dbService.doc(`hjWeets/${hjweetObj.id}`).update({\r\n      text: newWeet,\r\n      });\r\n      setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n      const {\r\n          target: { value },\r\n        } = event;\r\n        setNewWeet(value);\r\n  };\r\n    \r\n  return(\r\n    <div className=\"nweet\">\r\n        {editing ? (\r\n        <>\r\n          {isOwner && <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n              <input \r\n                 type=\"text\" \r\n                 value={newWeet} \r\n                 placeholder=\"Edit your HJWeet\" \r\n                 required\r\n                 autoFocus\r\n                 onChange={onChange}\r\n                 className=\"formInput\"\r\n              />\r\n              <input type=\"submit\" value=\"Update Hjweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n          </>\r\n          }\r\n        </>\r\n        ) : (\r\n        <>\r\n         <h4>{hjweetObj.text}</h4>\r\n         {hjweetObj.attachmentUrl && <img src={hjweetObj.attachmentUrl} />\r\n         }\r\n         {isOwner && (\r\n          <div class=\"nweet__actions\">\r\n            <span onClick={onDeleteClick}>\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </span>\r\n            <span onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faPencilAlt} />\r\n            </span>\r\n          </div>\r\n          )}\r\n        </>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hjweet;","import React, { useState } from 'react'; \r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HjweetFactory = ({ userObj }) => {\r\n    const [hjweet, setHjweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\")\r\n    const onSubmit = async (event) => {\r\n        // if (hjWeet === \"\") {\r\n        //     return;\r\n        // }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment != \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const hjweetObj = {\r\n            text: hjweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"hjWeets\").add(hjweetObj);\r\n            setHjweet(\"\");\r\n            setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setHjweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n           <div className=\"factoryInput__container\">\r\n            <input \r\n               className=\"factoryInput__input\"\r\n               value={hjweet} \r\n               onChange={onChange} \r\n               type=\"text\" \r\n               placeholder=\"What's on your mind?\" \r\n               maxLength={120}\r\n            /> \r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n              <span>Add photos</span>\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n               id=\"attach-file\"\r\n               type=\"file\"\r\n               accept=\"image/*\"\r\n               onChange={onFileChange}\r\n               style={{\r\n                opacity: 0,\r\n               }}\r\n            />\r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n               <img\r\n               src={attachment}\r\n               style={{\r\n                backgroundImage: attachment,\r\n               }}\r\n               />\r\n               <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                 <span>Remove</span>\r\n                 <FontAwesomeIcon icon={faTimes} />\r\n               </div>\r\n           </div>\r\n        )}\r\n    </form>\r\n    )\r\n}\r\nexport default HjweetFactory;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport Hjweet from 'components/Hjweet';\r\nimport HjweetFactory from 'components/HjweetFactory';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [hjWeets, setHjweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"hjWeets\").onSnapshot(snapshot => {\r\n            const hjWeetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                 ...doc.data(),\r\n            }));\r\n            setHjweets(hjWeetArray);\r\n        })\r\n    }, []);\r\n    return(\r\n        <div className=\"container\">\r\n                <HjweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {hjWeets.map((hjweet) => (\r\n                  <Hjweet \r\n                     key={hjweet.id} \r\n                     hjweetObj={hjweet} \r\n                     isOwner={hjweet.creatorId === userObj.uid} \r\n                  />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n              <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n               <Link\r\n                  to=\"/profile\"\r\n                  style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                  }}\r\n               >\r\n                 <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                 <span style={{ marginTop: 10 }}>\r\n                   {userObj.displayName\r\n                   ? `${userObj.displayName}의 Profile`\r\n                   : \"Profile\"}\r\n                 </span>\r\n               </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService } from 'fbase';\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n    <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\" \r\n                placeholder=\"Display name\" \r\n                value={newDisplayName}\r\n                autoFocus\r\n                className=\"formInput\"\r\n            />\r\n            <input \r\n                type=\"submit\" \r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                 marginTop: 10,\r\n                }}\r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) =>{\r\n      if(user) {\r\n        setUserObj({\r\n          displayName:user.displayName,\r\n          uid:user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, [])\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName:user.displayName,\r\n      uid:user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n\r\n  }\r\n   return (\r\n     <>\r\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing....\"}\r\n     </>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./styles.css\";\r\n// import firebase from \"./firebase\";\r\n// console.log(firebase);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}