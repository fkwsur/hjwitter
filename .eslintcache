[{"D:\\실습\\hjwitter\\src\\index.js":"1","D:\\실습\\hjwitter\\src\\components\\App.js":"2","D:\\실습\\hjwitter\\src\\components\\Router.js":"3","D:\\실습\\hjwitter\\src\\routes\\Auth.js":"4","D:\\실습\\hjwitter\\src\\routes\\Home.js":"5","D:\\실습\\hjwitter\\src\\fbase.js":"6","D:\\실습\\hjwitter\\src\\components\\Navigation.js":"7","D:\\실습\\hjwitter\\src\\routes\\Profile.js":"8","D:\\실습\\hjwitter\\src\\components\\Hjweet.js":"9","D:\\실습\\hjwitter\\src\\components\\HjweetFactory.js":"10","D:\\실습\\hjwitter\\src\\components\\AuthForm.js":"11"},{"size":308,"mtime":1612779083354,"results":"12","hashOfConfig":"13"},{"size":1006,"mtime":1612765448681,"results":"14","hashOfConfig":"13"},{"size":1165,"mtime":1612767310486,"results":"15","hashOfConfig":"13"},{"size":1327,"mtime":1612779210170,"results":"16","hashOfConfig":"13"},{"size":1056,"mtime":1612767446109,"results":"17","hashOfConfig":"13"},{"size":805,"mtime":1612494610837,"results":"18","hashOfConfig":"13"},{"size":1325,"mtime":1612766206605,"results":"19","hashOfConfig":"13"},{"size":1553,"mtime":1612767564514,"results":"20","hashOfConfig":"13"},{"size":2328,"mtime":1612766402554,"results":"21","hashOfConfig":"13"},{"size":3279,"mtime":1612778107407,"results":"22","hashOfConfig":"13"},{"size":2054,"mtime":1612766086825,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4wvfc5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\실습\\hjwitter\\src\\index.js",[],"D:\\실습\\hjwitter\\src\\components\\App.js",[],["51","52"],"D:\\실습\\hjwitter\\src\\components\\Router.js",[],"D:\\실습\\hjwitter\\src\\routes\\Auth.js",[],"D:\\실습\\hjwitter\\src\\routes\\Home.js",["53"],"import React, { useEffect, useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport Hjweet from 'components/Hjweet';\r\nimport HjweetFactory from 'components/HjweetFactory';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [hjWeets, setHjweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"hjWeets\").onSnapshot(snapshot => {\r\n            const hjWeetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                 ...doc.data(),\r\n            }));\r\n            setHjweets(hjWeetArray);\r\n        })\r\n    }, []);\r\n    return(\r\n        <div className=\"container\">\r\n                <HjweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {hjWeets.map((hjweet) => (\r\n                  <Hjweet \r\n                     key={hjweet.id} \r\n                     hjweetObj={hjweet} \r\n                     isOwner={hjweet.creatorId === userObj.uid} \r\n                  />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","D:\\실습\\hjwitter\\src\\fbase.js",[],"D:\\실습\\hjwitter\\src\\components\\Navigation.js",[],"D:\\실습\\hjwitter\\src\\routes\\Profile.js",["54"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService } from 'fbase';\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n    <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\" \r\n                placeholder=\"Display name\" \r\n                value={newDisplayName}\r\n                autoFocus\r\n                className=\"formInput\"\r\n            />\r\n            <input \r\n                type=\"submit\" \r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                 marginTop: 10,\r\n                }}\r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogoutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n}","D:\\실습\\hjwitter\\src\\components\\Hjweet.js",["55"],"import React, { useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Hjweet = ({hjweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newWeet, setNewWeet] = useState(hjweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n      const ok = window.confirm(\"Are you sure you want to delete this hjweet?\");\r\n      console.log(ok);\r\n      if(ok){\r\n        await dbService.doc(`hjWeets/${hjweetObj.id}`).delete();\r\n      }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      console.log(hjweetObj, newWeet);\r\n      await dbService.doc(`hjWeets/${hjweetObj.id}`).update({\r\n      text: newWeet,\r\n      });\r\n      setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n      const {\r\n          target: { value },\r\n        } = event;\r\n        setNewWeet(value);\r\n  };\r\n    \r\n  return(\r\n    <div className=\"nweet\">\r\n        {editing ? (\r\n        <>\r\n          {isOwner && <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n              <input \r\n                 type=\"text\" \r\n                 value={newWeet} \r\n                 placeholder=\"Edit your HJWeet\" \r\n                 required\r\n                 autoFocus\r\n                 onChange={onChange}\r\n                 className=\"formInput\"\r\n              />\r\n              <input type=\"submit\" value=\"Update Hjweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n          </>\r\n          }\r\n        </>\r\n        ) : (\r\n        <>\r\n         <h4>{hjweetObj.text}</h4>\r\n         {hjweetObj.attachmentUrl && <img src={hjweetObj.attachmentUrl} />\r\n         }\r\n         {isOwner && (\r\n          <div class=\"nweet__actions\">\r\n            <span onClick={onDeleteClick}>\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </span>\r\n            <span onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faPencilAlt} />\r\n            </span>\r\n          </div>\r\n          )}\r\n        </>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hjweet;","D:\\실습\\hjwitter\\src\\components\\HjweetFactory.js",["56","57"],"import React, { useState } from 'react'; \r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HjweetFactory = ({ userObj }) => {\r\n    const [hjweet, setHjweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\")\r\n    const onSubmit = async (event) => {\r\n        if (hjweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment != \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const hjweetObj = {\r\n            text: hjweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"hjWeets\").add(hjweetObj);\r\n            setHjweet(\"\");\r\n            setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setHjweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n           <div className=\"factoryInput__container\">\r\n            <input \r\n               className=\"factoryInput__input\"\r\n               value={hjweet} \r\n               onChange={onChange} \r\n               type=\"text\" \r\n               placeholder=\"What's on your mind?\" \r\n               maxLength={120}\r\n            /> \r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n              <span>Add photos</span>\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n               id=\"attach-file\"\r\n               type=\"file\"\r\n               accept=\"image/*\"\r\n               onChange={onFileChange}\r\n               style={{\r\n                opacity: 0,\r\n               }}\r\n            />\r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n               <img\r\n               src={attachment}\r\n               style={{\r\n                backgroundImage: attachment,\r\n               }}\r\n               />\r\n               <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                 <span>Remove</span>\r\n                 <FontAwesomeIcon icon={faTimes} />\r\n               </div>\r\n           </div>\r\n        )}\r\n    </form>\r\n    )\r\n}\r\nexport default HjweetFactory;\r\n\r\n","D:\\실습\\hjwitter\\src\\components\\AuthForm.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":21,"nodeType":"64","messageId":"65","endLine":2,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":5,"column":1,"nodeType":"68","endLine":52,"endColumn":2},{"ruleId":"69","severity":1,"message":"70","line":61,"column":38,"nodeType":"71","endLine":61,"endColumn":75},{"ruleId":"72","severity":1,"message":"73","line":16,"column":24,"nodeType":"74","messageId":"75","endLine":16,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":85,"column":16,"nodeType":"71","endLine":90,"endColumn":18},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'storageService' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]